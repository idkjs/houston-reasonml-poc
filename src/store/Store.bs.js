// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");

function create(reducer, initialState) {
  return {
          state: {
            contents: initialState
          },
          reducer: reducer,
          observers: {
            contents: /* [] */0
          },
          observerCount: {
            contents: 0
          }
        };
}

function dispatch(param, action) {
  var state = param.state;
  var newState = Curry._2(param.reducer, state.contents, action);
  state.contents = newState;
  return List.iter((function (obs) {
                return Curry._1(obs.call, newState);
              }), param.observers.contents);
}

function getState(store) {
  return store.state.contents;
}

function subscribe(param, call) {
  var observerCount = param.observerCount;
  var observers = param.observers;
  var listener_id = observerCount.contents;
  var listener = {
    id: listener_id,
    call: call
  };
  observers.contents = {
    hd: listener,
    tl: observers.contents
  };
  var unsubscribe = function (param) {
    observers.contents = List.filter(function (l) {
            return l.id !== observerCount.contents;
          })(observers.contents);
    
  };
  observerCount.contents = observerCount.contents + 1 | 0;
  return unsubscribe;
}

exports.create = create;
exports.dispatch = dispatch;
exports.getState = getState;
exports.subscribe = subscribe;
/* No side effect */
